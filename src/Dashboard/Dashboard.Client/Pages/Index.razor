@page "/"

@using Core.Entities
@using System.Net.Http
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.Logging

@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ILoggerProvider LoggerProvider

<h1>Hello, world!</h1>

<div>
    @foreach (var gameState in gameStates)
    {
        <div>
            <div style="display:inline-block">@gameState.Game.HomeTeam</div>
            <div style="display:inline-block">@gameState.HomeScore</div>
        </div>
        <div>
            <div style="display:inline-block">@gameState.Game.AwayTeam</div>
            <div style="display:inline-block">@gameState.AwayScore</div>
        </div>
    }
</div>

@code {
    private HubConnection hubConnection;
    private IReadOnlyList<GameState> gameStates = new List<GameState>();

    protected override async Task OnInitializedAsync()
    {
        var weekGames = await Http.GetFromJsonAsync<Game[]>("api/game/week/1");
        gameStates = weekGames.Select(g => new GameState { Game = g }).ToList();

        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/gamehub"))
            .ConfigureLogging(logging => logging.AddProvider(LoggerProvider))
            .Build();

        hubConnection.On<GameState>("ReceivePlay", (gameStateMessage) => {
            var game = gameStates.Single(game => game.Game.Id == gameStateMessage.Game.Id);
            game.HomeScore = (int)gameStateMessage.HomeScore;
            game.AwayScore = (int)gameStateMessage.AwayScore;

            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }
}
