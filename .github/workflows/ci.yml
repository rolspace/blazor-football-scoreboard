name: ci
run-name: Run CI

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/Dockerfile'
      - .docker/**
      - .vscode/**
      - .dockerignore
      - .editorconfig
      - coverage/**
      - docker-compose*
      - README.md

concurrency: ${{ github.workflow }}

jobs:
  ci-build:
    name: Build
    permissions:
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create test database
        env:
          DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          docker pull mysql:8.0.28
          docker run --name footballscoreboard_testdb -e MYSQL_ROOT_PASSWORD="$DB_ROOT_PASSWORD" -e MYSQL_USER="$DB_USER" -e MYSQL_PASSWORD="$DB_PASSWORD" -e MYSQL_DATABASE=${{ vars.DB_NAME }} -p 3306:3306 -v ${{github.workspace}}/scripts/testdb:/docker-entrypoint-initdb.d -d mysql:8.0.28

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore
        run: |
          dotnet restore

      - name: Build
        run: |
          dotnet build --configuration Release --no-restore

      - name: Run tests
        env:
          MYSQLCONNSTR_FootballDbConnection: Server=localhost;Database=${{ vars.DB_NAME }};Uid=${{ secrets.DB_USER }};Pwd=${{ secrets.DB_PASSWORD }};
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet-coverage collect 'dotnet test --no-restore' -f xml  -o 'coverage.xml'
